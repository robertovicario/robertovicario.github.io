---
const technologies = [
	"java",
	"c",
	"py",
	"r",
	"js",
	"php",
	"html",
	"css",
	"bootstrap",
	"figma",
	"spring",
	"flask",
	"linux",
	"bash",
	"git",
	"docker",
	"kubernetes",
	"aws",
	"numpy",
	"pandas",
	"seaborn",
	"matplotlib",
	"sklearn",
	"tensorflow",
];
---

<div class="relative overflow-x-hidden py-16">
	<div
		class="pointer-events-none absolute inset-y-0 left-0 w-32 bg-gradient-to-r from-[var(--background)] to-transparent z-20"
	>
	</div>
	<div
		class="pointer-events-none absolute inset-y-0 right-0 w-32 bg-gradient-to-l from-[var(--background)] to-transparent z-20"
	>
	</div>
	<div
		class="flex animate-scroll hover:animate-paused gap-12 md:gap-20 w-max"
	>
		{
			[...technologies, ...technologies, ...technologies].map((tech) => (
				<div class="flex items-center gap-2 group transition-all duration-300">
					<img
						class="h-7 w-auto object-contain transition-transform group-hover:scale-110 opacity-60 me-2"
						src={`https://go-skill-icons.vercel.app/api/icons?i=${tech}&theme=light`}
						alt={tech}
						width="32"
						height="32"
					/>
					<span class="text-lg font-medium text-[var(--white-icon)]">
						{(() => {
							switch (tech) {
								case "py":
									return "Python";
								case "js":
									return "JavaScript";
								case "php":
									return "PHP";
								case "html":
									return "HTML";
								case "css":
									return "CSS";
								case "aws":
									return "AWS";
								case "numpy":
									return "NumPy";
								case "sklearn":
									return "scikit-learn";
								case "tensorflow":
									return "TensorFlow";
								default:
									return (
										tech.charAt(0).toUpperCase() +
										tech.slice(1)
									);
							}
						})()}
					</span>
				</div>
			))
		}
	</div>
</div>

<style is:global>
	@keyframes scroll {
		from {
			transform: translateX(0);
		}
		to {
			transform: translateX(-50%);
		}
	}
	.animate-scroll {
		animation: scroll 60s linear infinite;
	}

	@media (min-width: 768px) {
		.animate-scroll {
			animation-duration: 50s;
		}
	}
</style>
